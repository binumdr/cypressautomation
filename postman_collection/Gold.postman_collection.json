{
	"info": {
		"_postman_id": "ac741e21-6619-4688-903d-20b052bc36f0",
		"name": "Gold",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15049991"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"    const Response = pm.response.json();",
							"    pm.globals.set(\"token\", Response.data.accessToken);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\":\"tester@noveltytechnology.com\",\n    \"password\":\"P@ssw0rd@2023\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users?limit=5&offset=0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "5"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User add",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = \"test-User-\" + pm.variables.replaceIn('{{$randomInt}}');",
							"",
							"pm.environment.set('repoFirstName',firstName);",
							"pm.environment.set('repoEmail',firstName+\"@gmail.com\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const Response = pm.response.json();",
							"",
							"    pm.globals.set(\"UserId\", Response.data._id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"demographic\": {\n        \"firstName\": \"{{repoFirstName}}\",\n        \"middleName\": \"\",\n        \"lastName\": \"mdr\",\n        \"email\": \"{{repoEmail}}\",\n        \"gender\": \"male\",\n        \"dob\": \"1996-11-06\",\n        \"phone\": \"1212121212\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users?limit=5&offset=0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "5"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{repoFirstName}}\",\n    \"middleName\": \"\",\n    \"lastName\": \"mdr\",\n     \"email\": \"{{repoEmail}}\",\n    \"gender\": \"Female\",\n    \"dob\": \"1996-11-06\",\n    \"phone\": \"1212121212\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{UserId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{UserId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Refresh token",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"demographic\": {\n        \"firstName\": \"binu\",\n        \"middleName\": \"\",\n        \"lastName\": \"mdr\",\n        \"email\": \"binu.bmanandhar@gmail.com\",\n        \"gender\": \"Female\",\n        \"dob\": \"1996-11-06\",\n        \"phone\": \"1212121212\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/refresh-token",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"refresh-token"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					""
				]
			}
		}
	]
}